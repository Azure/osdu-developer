{{- $enabled := eq (include "osdu-developer-init.isEnabled" .) "1" -}}
{{- $namespace := .Release.Namespace -}}
{{- if and $enabled .Values.jobs.adminUI }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: admin-ui
  namespace: admin-ui  # Ensure the correct namespace
spec:
  ttlSecondsAfterFinished: 120
  template:
    spec:
      volumes:
      - name: script
        configMap:
          name: admin-ui-build
          defaultMode: 0500
      - name: adminui-storage  # Add this new volume
        persistentVolumeClaim:
          claimName: adminui-pvc
      initContainers:
      - name: data-seed
        image: mcr.microsoft.com/cbl-mariner/base/nodejs:18
        command: ["/bin/sh"]
        args:
        - -c
        - |
          tdnf install -y curl jq tar && \
          /script/init.sh
        volumeMounts:
          - name: script
            mountPath: "/script"
          - name: adminui-storage  # Add this mount
            mountPath: "/adminui-data"
        env:
          - name: AZURE_TENANT_ID
            value: {{ .Values.tenantId | quote }}
          - name: AZURE_CLIENT_ID
            value: {{ .Values.clientId | quote }}
          - name: DATA_DOMAIN
            value: ".dataservices.energy"
          - name: DATA_PARTITION
            value: 'opendes'
          - name: URL
            value: https://community.opengroup.org/osdu/ui/admin-ui-group/admin-ui-totalenergies/admin-ui-totalenergies/-/archive/main/admin-ui-totalenergies-main.tar.gz
          - name: NODE_OPTIONS  # Add this environment variable
            value: "--max-old-space-size=4096"
        resources:
          requests:
            memory: "4Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1"
      containers:
      - name: sleep
        image: istio/base
        command: ["/bin/sleep", "30"]
        volumeMounts:
          - name: script
            mountPath: "/script"
      restartPolicy: Never
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-ui-build
  namespace: admin-ui  # Ensure the correct namespace
data:
  init.sh: |
    #!/usr/bin/env sh
    set -euo pipefail
    set -o nounset

    echo "=================================================================="
    echo "  Downloading Admin UI Source Code       "
    echo "=================================================================="

    url_basename=$(basename ${URL})
    echo "Derived filename from URL: ${url_basename}"

    # Download the file using curl
    echo "Downloading file from ${URL} to ${url_basename}"
    curl -so ${url_basename} ${URL}

    # Extract the tar.gz file
    mkdir -p extracted_files
    tar -xzf ${url_basename} --strip-components=1 -C extracted_files
    cd extracted_files/OSDUApp
    ls -l

    # Install Packages
    npm install -g @angular/cli && npm install && npm ci

    # Copy custom Files
    echo "Copying the azure custom code."
    cp providers/azure/routing.ts ./src/app/
    cp src/config/config.azure.json ./src/config/config.json && rm src/config/config.*.json

    # Perform JQ replace here
    jq --arg appinnsights "$APP_INSIGHTS" \
    --arg client "$AZURE_CLIENT_ID" \
    --arg domain "$DATA_DOMAIN" \
    --arg partition "$DATA_PARTITION" \
    --arg redirect "$REDIRECT_URI" \
    --arg tenant "$AZURE_TENANT_ID" \
    '.settings.appInsights.instrumentationKey = $appinnsights | \
     .settings.data_partition = $partition | \
     .settings.domain_name = $domain | \
     .settings.idp.tenant_id = $tenant | \
     .settings.idp.client_id = $client | \
     .settings.idp.redirect_uri = $redirect | \
     .settings.idp.scope = $client + "/.default" | \
     .settings.api_endpoints.entitlement_endpoint = http://entitlements.osdu-core.svc.cluster.local/api/ | \
     .settings.api_endpoints.storage_endpoint = http://storage.osdu-core.svc.cluster.local/api/ | \
     .settings.api_endpoints.search_endpoint = http://search.osdu-core.svc.cluster.local/api/ | \
     .settings.api_endpoints.legal_endpoint = http://legal.osdu-core.svc.cluster.local/api/| \
     .settings.api_endpoints.schema_endpoint = http://schema.osdu-core.svc.cluster.local/api/ | \
     .settings.api_endpoints.file_endpoint = http://file.osdu-core.svc.cluster.local/api/ | \
     .settings.api_endpoints.graphAPI_endpoint = "https://graph.microsoft.com/v1.0/" | \
     .settings.api_endpoints.workflow_endpoint = http://entitlements.osdu-core.svc.cluster.local/api/ | \
     .settings.api_endpoints.secrets_endpoint = http://secrets.osdu-core.svc.cluster.local/api/ | \
     .settings.api_endpoints.wddms_endpoint = http://wddms.osdu-core.svc.cluster.local/api/' \
    src/config/config.json > src/config/tmp.json && mv src/config/tmp.json src/config/config.json

    cat src/config/config.json

    # Building Angular code
    echo "Building Angular code."
    ng build

    # Copy to share
    echo "Copying the build to the share."
    cp -r dist/OSDUApp/* /adminui-data

    exit 0
{{- end }}
