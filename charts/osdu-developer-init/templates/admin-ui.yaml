{{- $enabled := eq (include "osdu-developer-init.isEnabled" .) "1" -}}
{{- $namespace := .Release.Namespace -}}
{{- if and $enabled .Values.jobs.adminUI }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: admin-ui
  namespace: admin-ui  # Ensure the correct namespace
spec:
  ttlSecondsAfterFinished: 120
  template:
    spec:
      volumes:
      - name: script
        configMap:
          name: admin-ui-build
          defaultMode: 0500
      - name: adminui-storage  # Add this new volume
        persistentVolumeClaim:
          claimName: adminui-pvc
      initContainers:
      - name: data-seed
        image: mcr.microsoft.com/cbl-mariner/base/nodejs:18
        command: ["/bin/sh"]
        args:
        - -c
        - |
          tdnf install -y curl jq && \
          /script/init.sh
        volumeMounts:
          - name: script
            mountPath: "/script"
          - name: adminui-storage  # Add this mount
            mountPath: "/adminui-data"
        env:
          - name: AZURE_TENANT_ID
            value: {{ .Values.tenantId | quote }}
          - name: AZURE_CLIENT_ID
            value: {{ .Values.clientId | quote }}
          - name: URL
            value: https://community.opengroup.org/osdu/ui/admin-ui-group/admin-ui-totalenergies/admin-ui-totalenergies/-/archive/main/admin-ui-totalenergies-main.tar.gz
      containers:
      - name: sleep
        image: istio/base
        command: ["/bin/sleep", "30"]
        volumeMounts:
          - name: script
            mountPath: "/script"
      restartPolicy: Never
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-ui-build
  namespace: admin-ui  # Ensure the correct namespace
data:
  init.sh: |
    #!/usr/bin/env sh
    set -euo pipefail
    set -o nounset

    echo "=================================================================="
    echo "  Downloading Admin UI Source Code       "
    echo "=================================================================="

    url_basename=$(basename ${URL})
    echo "Derived filename from URL: ${url_basename}"

    # Download the file using curl
    echo "Downloading file from ${URL} to ${url_basename}"
    curl -so ${url_basename} ${URL}

    # Extract the tar.gz file
    mkdir -p extracted_files
    tar -xzf ${url_basename} --strip-components=1 -C extracted_files
    cd extracted_files

    # Install Packages
    npm install -g @angular/cli && npm install && npm ci

    # Copy custom Files
    cp providers/azure/routing.ts ./src/app/
    cp src/config/config.azure.json ./src/config/config.json && rm src/config/config.*.json

    # Perform JQ replace here.

    # Build and copy to share
    ng build
    cp -r dist/* /adminui-data

    exit 0
{{- end }}
