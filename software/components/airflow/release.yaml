---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: airflow
  namespace: flux-system
  labels:
    name: airflow
spec:
  targetNamespace: airflow
  releaseName: airflow
  dependsOn:
    - name: azure-keyvault-airflow
      namespace: default
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 10
      strategy: rollback
  test:
    enable: true
  interval: 10m0s
  chart:
    spec:
      chart: airflow
      # version: 1.11.0
      sourceRef:
        kind: HelmRepository
        name: airflow
        namespace: flux-system
  values:
    # Airflow executor
    executor: KubernetesExecutor

    # Environment variables for all airflow containers
    env:
      - name: ENVIRONMENT
        value: dev

    # Admin user configuration
    admin:
      existingSecret: airflow-secrets
      usernameKey: username
      passwordKey: password

    # Disable the internal PostgreSQL chart
    postgresql:
      enabled: false

    # External PostgreSQL configuration
    data:
      metadataSecretName: airflow-secrets

    # Disable pgbouncer.
    # CloudNativePG provides native support for connection pooling with PgBouncer
    pgbouncer:
      enabled: false

    # Pull DAGS from file share and from a git repo
    dags:
      gitSync:
        enabled: true
        repo: 'https://github.com/azure/osdu-developer.git'
        branch: main
        wait: 40
        subPath: dags
      # persistence:
      #   enabled: false
      #   existingClaim: airflow-dags-pvc
      #   subPath: dags

    logs:
      persistence:
        enabled: true
        existingClaim: airflow-logs-pvc
        storageClassName: azurefile-csi-premium

    config:
      webserver:
        expose_config: 'True'
        instance_name: OSDU
        enable_proxy_fix: 'True'
        # base_url: 'http://localhost/airflow'
      operators:
        default_owner: OSDU

    # We disable the log groomer sidecars because we use Azure File Storage for logs
    triggerer:
      logGroomerSidecar:
        enabled: false
    scheduler:
      logGroomerSidecar:
        enabled: false
    workers:
      logGroomerSidecar:
        enabled: false

    # Ensure we are using the secrets from Azure Key Vault
    enableBuiltInSecretEnvVars:
      AIRFLOW__CORE__FERNET_KEY: false
      AIRFLOW__WEBSERVER__SECRET_KEY: false
    fernetKeySecretName: keyvault-secrets
    webserverSecretKeySecretName: keyvault-secrets

    # Airflow create user job settings
    createUserJob:
      useHelmHooks: false

    # Airflow database migration job settings
    migrateDatabaseJob:
      useHelmHooks: false

    # Ensure this goes on the correct node pool.
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: agentpool
              operator: In
              values:
                - poolz1
                - poolz2
                - poolz3  # Adjust these values to match your node pools

    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          release: airflow  # Adjust to match your Helm release name

    # Tolerations should be defined outside of affinity
    tolerations:
      - effect: NoSchedule
        key: app
        value: "cluster"







# ---
# apiVersion: helm.toolkit.fluxcd.io/v2beta1
# kind: HelmRelease
# metadata:
#   name: airflow
#   namespace: flux-system
#   labels:
#     name: airflow
# spec:
#   targetNamespace: airflow
#   releaseName: airflow
#   dependsOn:
#     - name: azure-keyvault-airflow
#       namespace: default
#   install:
#     remediation:
#       retries: 3
#   upgrade:
#     remediation:
#       retries: 10
#       strategy: rollback
#   test:
#     enable: true
#   interval: 10m0s
#   chart:
#     spec:
#       chart: airflow
#       version: 1.15.0
#       sourceRef:
#         kind: HelmRepository
#         name: airflow
#         namespace: flux-system
#   values:

#     # Version Isolation
#     airflowVersion: 2.10.1
#     defaultAirflowTag: 2.10.1
#     # Used for mount paths
#     airflowHome: /opt/airflow

#     # Ensure this goes on the correct node pool.
#     affinity:
#       nodeAffinity:
#         requiredDuringSchedulingIgnoredDuringExecution:
#           nodeSelectorTerms:
#           - matchExpressions:
#             - key: agentpool
#               operator: In
#               values:
#                 - poolz1
#                 - poolz2
#                 - poolz3 
#     topologySpreadConstraints:
#     - maxSkew: 1
#       topologyKey: topology.kubernetes.io/zone
#       whenUnsatisfiable: DoNotSchedule
#       labelSelector:
#         matchLabels:
#           release: airflow  # Adjust to match your Helm release name
#     tolerations:
#       - effect: NoSchedule
#         key: app
#         value: "cluster"


#     # Airflow executor
#     # One of: LocalExecutor, LocalKubernetesExecutor, CeleryExecutor, KubernetesExecutor, CeleryKubernetesExecutor
#     executor: KubernetesExecutor

#     # Enables selected built-in secrets that are set via environment variables by default.
#     # Those secrets are provided by the Helm Chart secrets by default but in some cases you
#     # might want to provide some of those variables with _CMD or _SECRET variable, and you should
#     # in this case disable setting of those variables by setting the relevant configuration to false.
#     enableBuiltInSecretEnvVars:
#       AIRFLOW__CORE__FERNET_KEY: true
#       AIRFLOW__WEBSERVER__SECRET_KEY: false
        
#     # Airflow create user job settings
#     createUserJob:
#       useHelmHooks: false

#     # Airflow database migration job settings
#     migrateDatabaseJob:
#       useHelmHooks: false

#     # Environment variables for all airflow containers
#     env:
#       # Needed for installing python osdu python sdk. In future this will be changed
#       - name: CI_COMMIT_TAG
#         value: "v0.12.0"
#       - name: BUILD_TAG
#         value: "v0.12.0"
#       #
#       - name: AIRFLOW_VAR_ENTITLEMENTS_MODULE_NAME
#         value: "entitlements_client"
#       - name: CLOUD_PROVIDER
#         value: "azure"
#       - name: ENVIRONMENT
#         value: "dev"

#     extraEnv: |
#       - name: AIRFLOW_VAR_ANOTHER_KEY
#         value: 'value_1'

#     extraConfigMaps:
#       'airflow-variables':
#         data: |
#           AIRFLOW_VAR_ENV_VARS_ENABLED: "True"
#           AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
#           AIRFLOW_VAR_CORE__CONFIG__DATALOAD_CONFIG_PATH: "/opt/airflow/dags/configs/dataload.ini"
#           AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX: "True"
#           AIRFLOW__CORE__PLUGINS_FOLDER: "/opt/airflow/plugins"
#           AIRFLOW__CORE__LOGGING_LEVEL: "INFO"
#           AIRFLOW__LOGGING__ENABLE_TASK_CONTEXT_LOGGER: "False"
#           AIRFLOW_VAR_NAMESPACE: "airflow"
#           AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"

#     extraEnvFrom: |
#       - configMapRef:
#           name: "airflow-variables"
#       - secretRef:
#           name: 'airflow-variables'

#     # Airflow database & redis config
#     data:
#       metadataSecretName: airflow-secrets

#     # Fernet key settings
#     fernetKeySecretName: airflow-secrets

#     # Flask secret key for Airflow Webserver: `[webserver] secret_key` in airflow.cfg
#     webserverSecretKeySecretName: airflow-secrets

#     # Airflow Worker Config
#     workers:
#       logGroomerSidecar:
#         enabled: false
#       env:
#         - name: AIRFLOW_VAR_CORE__SERVICE__PARTITION__URL
#           value: "http://partition.osdu-core.svc.cluster.local/api/partition/v1"
#         - name: AIRFLOW_VAR_CORE__SERVICE__LEGAL__HOST
#           value: "http://legal.osdu-core.svc.cluster.local/api/legal/v1"
#         - name: AIRFLOW_VAR_CORE__SERVICE__ENTITLEMENTS__URL
#           value: "http://entitlements.osdu-core.svc.cluster.local/api/entitlements/v2"
#         - name: AIRFLOW_VAR_CORE__SERVICE__SCHEMA__URL
#           value: "http://schema.osdu-core.svc.cluster.local/api/schema-service/v1"
#         - name: AIRFLOW_VAR_CORE__SERVICE__SEARCH__URL
#           value: "http://search.osdu-core.svc.cluster.local/api/search/v2"
#         - name: AIRFLOW_VAR_CORE__SERVICE__SEARCH_WITH_CURSOR__URL
#           value: "http://search.osdu-core.svc.cluster.local/api/search/v2/query_with_cursor"
#         - name: AIRFLOW_VAR_CORE__SERVICE__STORAGE__URL
#           value: "http://storage.osdu-core.svc.cluster.local/api/storage/v2"
#         - name: AIRFLOW_VAR_CORE__SERVICE__FILE__HOST
#           value: "http://file.osdu-core.svc.cluster.local/api/file"
#         - name: AIRFLOW_VAR_CORE__SERVICE__WORKFLOW__HOST
#           value: "http://workflow.osdu-core.svc.cluster.local/api/workflow/v1"
#         - name: AIRFLOW_VAR_CORE__SERVICE__DATASET__HOST
#           value: "http://dataset.osdu-core.svc.cluster.local/api/dataset/v1"

#     ###################################
#     ## COMPONENT | Airflow Scheduler
#     ###################################
#     # scheduler:
#     #   enabled: true
#     #   logGroomerSidecar:
#     #     enabled: false

#     ###################################
#     ## COMPONENT | Airflow Webserver
#     ###################################
#     # webserver:
#     #   enabled: true

#     # Airflow Triggerer Config
#     # triggerer:
#     #   enabled: true
#     #   logGroomerSidecar:
#         # enabled: false

#     # Airflow Dag Processor Config
#     # dagProcessor:
#     #   enabled: false

#     # Flower settings
#     flower:
#       # Enable flower.
#       # If True, and using CeleryExecutor/CeleryKubernetesExecutor, will deploy flower app.
#       enabled: false

#     # StatsD settings
#     statsd:
#       enabled: true

#     # PgBouncer settings
#     # CloudNativePG provides native support for connection pooling with PgBouncer
#     pgbouncer:
#       # Enable PgBouncer
#       enabled: false

#     # Configuration for the redis provisioned by the chart
#     # redis:
#     #   enabled: true
#     #   terminationGracePeriodSeconds: 600

#     # Configuration for postgresql subchart
#     # Not recommended for production
#     postgresql:
#       enabled: false

#     # Config settings to go into the mounted airflow.cfg
#     #
#     # Please note that these values are passed through the `tpl` function, so are
#     # all subject to being rendered as go templates. If you need to include a
#     # literal `{{` in a value, it must be expressed like this:
#     #
#     #    a: '{{ "{{ not a template }}" }}'
#     #
#     # Do not set config containing secrets via plain text values, use Env Var or k8s secret object
#     # yamllint disable rule:line-length
#     config:
#       webserver:
#         expose_config: 'True'
#         instance_name: OSDU
#         enable_proxy_fix: 'True'
#         # base_url: 'http://localhost/airflow'
#       operators:
#         default_owner: OSDU

#     # Pull DAGS from file share
#     dags:
#       persistence:
#         enabled: false
#         existingClaim: airflow-dags-pvc
#         subPath: dags
#       gitSync:
#         enabled: true
#         repo: 'https://github.com/azure/osdu-developer'
#         branch: main
#         wait: 40
#         subPath: dags

#     # Global Logs go to pvc file share.
#     logs:
#       persistence:
#         enabled: true
#         existingClaim: airflow-logs-pvc
#         storageClassName: azurefile-csi-premium
