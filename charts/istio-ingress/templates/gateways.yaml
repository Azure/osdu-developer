{{- define "gateway" -}}
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: {{ .name | default (printf "%s-gateway" .gatewayType) }}
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: All
    - name: https
      protocol: HTTPS
      port: 443
      hostname: {{ printf "%s.%s.cloudapp.azure.com" .azure.dnsName .azure.region | quote }}
      tls:
        mode: Terminate
        certificateRefs:
        - kind: Secret
          name: {{ .tls.credentialName | quote }}
          namespace: istio-system
      allowedRoutes:
        namespaces:
          from: All
{{- end }}

{{- if .Values.ingress.externalGateway.enabled }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: external-gateway
  namespace: istio-system
  labels:
    {{- include "istio-ingress.labels" . | nindent 4 }}
    istio.io/gateway-name: external-gateway
spec:
  gatewayClassName: istio
  addresses:
  - type: NamedAddress
    value: external-gateway-istio
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: All
    - name: https
      protocol: HTTPS
      port: 443
      tls:
        mode: Terminate
        certificateRefs:
        - kind: Secret
          name: {{ .Values.ingress.externalGateway.tls.credentialName | quote }}
          namespace: istio-system
      allowedRoutes:
        namespaces:
          from: All
{{- end }}

{{- if .Values.ingress.internalGateway.enabled }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: internal-gateway
  namespace: istio-system
  labels:
    {{- include "istio-ingress.labels" . | nindent 4 }}
    istio.io/gateway-name: internal-gateway
spec:
  gatewayClassName: istio
  addresses:
  - type: NamedAddress
    value: internal-gateway-istio
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: All
    - name: https
      protocol: HTTPS
      port: 443
      tls:
        mode: Terminate
        certificateRefs:
        - kind: Secret
          name: {{ .Values.ingress.internalGateway.tls.credentialName | quote }}
          namespace: istio-system
      allowedRoutes:
        namespaces:
          from: All
{{- end }}
