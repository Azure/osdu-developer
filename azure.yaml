# yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json

name: osdu-developer
metadata:
  template: osdu-developer@0.0.1
infra:
  provider: bicep
  path: bicep
hooks:
  # preprovision:
  #   posix:
  #     interactive: false
  #     continueOnError: false
  #     shell: sh
  #     run: |
  #       # Check if PREPARE is not set to true
  #       if [[ "$PREPARE" == "true" ]]; then
  #         # Check if Docker command exists
  #         if command -v docker &> /dev/null; then
  #           echo "Building Docker Image"
  #           docker buildx build --no-cache -f scripts/Dockerfile-provision -t azd-provision scripts
  #           docker run --rm -v $(pwd):/workspace -v "${HOME}/.azure:/root/.azure" -e AZURE_CONFIG_DIR=/root/.azure azd-provision /usr/local/bin/preprovision.sh -s ${AZURE_SUBSCRIPTION_ID}
  #           sleep 5
  #         else
  #           echo "Docker is not installed."
  #           exit 1
  #         fi
  #       fi

  #   windows:
  #     interactive: false
  #     continueOnError: false
  #     shell: pwsh
  #     run: |
  #       if (-Not (Get-Command "docker" -ErrorAction SilentlyContinue))
  #       {
  #         Write-Host "no docker"
  #         exit
  #       }
  #       Write-Host "Building Docker Image"
  #       docker buildx build --no-cache -f scripts/Dockerfile-provision -t azd-provision scripts
  #       docker run --rm -v ${pwd}:/workspace -v "$($HOME)/.azure:/root/.azure" -e AZURE_CONFIG_DIR=/root/.azure azd-provision /usr/local/bin/preprovision.sh -s $env:AZURE_SUBSCRIPTION_ID
  #       Start-Sleep -Seconds 5

  # postprovision:
  #   posix:
  #     interactive: false
  #     continueOnError: false
  #     shell: sh
  #     run: |
  #       # Check if FETCH_ENV is not set to true
  #       if [[ "$FETCH_ENV" == "true" ]]; then
  #         # Check if Docker command exists
  #         if command -v docker &> /dev/null; then
  #           echo "Building Docker Image"
  #           docker buildx build --no-cache -f scripts/Dockerfile-provision -t azd-provision scripts
  #           docker run --rm -v $(pwd):/workspace -v "${HOME}/.azure:/root/.azure" -e AZURE_CONFIG_DIR=/root/.azure azd-provision /usr/local/bin/postprovision.sh -s ${AZURE_SUBSCRIPTION_ID}
  #           sleep 5
  #         else
  #           echo "Docker is not installed."
  #           exit 1
  #         fi
  #       fi