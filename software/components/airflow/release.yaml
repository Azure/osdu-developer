---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: airflow
  namespace: flux-system
  labels:
    name: airflow
spec:
  targetNamespace: airflow
  releaseName: airflow
  dependsOn:
    - name: azure-keyvault-airflow
      namespace: default
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 10
      strategy: rollback
  test:
    enable: true
  interval: 10m0s
  chart:
    spec:
      chart: airflow
      # version: 1.11.0
      sourceRef:
        kind: HelmRepository
        name: airflow
        namespace: flux-system
  values:

    # Isolate version
    airflowVersion: 2.10.1
    defaultAirflowTag: 2.10.1

    # Ensure this goes on the correct node pool.
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: agentpool
              operator: In
              values:
                - poolz1
                - poolz2
                - poolz3 
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          release: airflow  # Adjust to match your Helm release name
    tolerations:
      - effect: NoSchedule
        key: app
        value: "cluster"


    # Airflow executor
    # One of: LocalExecutor, LocalKubernetesExecutor, CeleryExecutor, KubernetesExecutor, CeleryKubernetesExecutor
    executor: KubernetesExecutor

    # Enables selected built-in secrets that are set via environment variables by default.
    # Those secrets are provided by the Helm Chart secrets by default but in some cases you
    # might want to provide some of those variables with _CMD or _SECRET variable, and you should
    # in this case disable setting of those variables by setting the relevant configuration to false.
    enableBuiltInSecretEnvVars:
      AIRFLOW__CORE__FERNET_KEY: false
      AIRFLOW__WEBSERVER__SECRET_KEY: false

    extraConfigMaps:
      'airflow-airflow-variables':
        useHelmHooks: false
        data: |
          AIRFLOW_VAR_CORE__CONFIG__DATALOAD_CONFIG_PATH: "/opt/airflow/dags/configs/dataload.ini"
          AIRFLOW_VAR_ENV_VARS_ENABLED: "true"
          AIRFLOW_VAR_ENTITLEMENTS_MODULE_NAME: "entitlements_client"
          AIRFLOW_VAR_CORE__SERVICE__PARTITION__URL: "http://partition.osdu-core.svc.cluster.local/api/partition/v1"
          AIRFLOW_VAR_CORE__SERVICE__LEGAL__HOST: "http://legal.osdu-core.svc.cluster.local/api/legal/v1"
          AIRFLOW_VAR_CORE__SERVICE__ENTITLEMENTS__URL: "http://entitlements.osdu-core.svc.cluster.local/api/entitlements/v2"
          AIRFLOW_VAR_CORE__SERVICE__SCHEMA__URL: "http://schema.osdu-core.svc.cluster.local/api/schema-service/v1"
          AIRFLOW_VAR_CORE__SERVICE__SEARCH__URL: "http://search.osdu-core.svc.cluster.local/api/search/v2"
          AIRFLOW_VAR_CORE__SERVICE__SEARCH_WITH_CURSOR__URL: "http://search.osdu-core.svc.cluster.local/api/search/v2/query_with_cursor"
          AIRFLOW_VAR_CORE__SERVICE__STORAGE__URL: "http://storage.osdu-core.svc.cluster.local/api/storage/v2"
          AIRFLOW_VAR_CORE__SERVICE__FILE__HOST: "http://file.osdu-core.svc.cluster.local/api/file"
          AIRFLOW_VAR_CORE__SERVICE__WORKFLOW__HOST: "http://workflow.osdu-core.svc.cluster.local/api/workflow/v1"
          AIRFLOW_VAR_CORE__SERVICE__DATASET__HOST: "http://dataset.osdu-core.svc.cluster.local/api/dataset/v1"
        
    # Airflow create user job settings
    createUserJob:
      useHelmHooks: false

    # Airflow database migration job settings
    migrateDatabaseJob:
      useHelmHooks: false

    # Environment variables for all airflow containers
    env:
      - name: ENVIRONMENT
        value: dev

    # Airflow database & redis config
    data:
      metadataSecretName: airflow-secrets

    # Fernet key settings
    fernetKeySecretName: keyvault-secrets

    # Flask secret key for Airflow Webserver: `[webserver] secret_key` in airflow.cfg
    webserverSecretKeySecretName: keyvault-secrets

    # Airflow Worker Config
    workers:
      logGroomerSidecar:
        enabled: false

    # Airflow scheduler settings
    scheduler:
      enabled: true
      logGroomerSidecar:
        enabled: false

    # Airflow webserver settings
    webserver:
      enabled: true

    # Airflow Triggerer Config
    triggerer:
      enabled: true
      logGroomerSidecar:
        enabled: false

    # Airflow Dag Processor Config
    dagProcessor:
      enabled: false

    # Flower settings
    flower:
      # Enable flower.
      # If True, and using CeleryExecutor/CeleryKubernetesExecutor, will deploy flower app.
      enabled: false

    # StatsD settings
    statsd:
      enabled: true

    # PgBouncer settings
    # CloudNativePG provides native support for connection pooling with PgBouncer
    pgbouncer:
      # Enable PgBouncer
      enabled: false

    # Configuration for the redis provisioned by the chart
    redis:
      enabled: true
      terminationGracePeriodSeconds: 600

    # Configuration for postgresql subchart
    # Not recommended for production
    postgresql:
      enabled: false

    # Config settings to go into the mounted airflow.cfg
    #
    # Please note that these values are passed through the `tpl` function, so are
    # all subject to being rendered as go templates. If you need to include a
    # literal `{{` in a value, it must be expressed like this:
    #
    #    a: '{{ "{{ not a template }}" }}'
    #
    # Do not set config containing secrets via plain text values, use Env Var or k8s secret object
    # yamllint disable rule:line-length
    config:
      webserver:
        expose_config: 'True'
        instance_name: OSDU
        enable_proxy_fix: 'True'
        # base_url: 'http://localhost/airflow'
      operators:
        default_owner: OSDU


    # Pull DAGS from file share
    dags:
      persistence:
        enabled: false
        existingClaim: airflow-dags-pvc
        subPath: dags
      gitSync:
        enabled: false


    logs:
      persistence:
        enabled: true
        existingClaim: airflow-logs-pvc
        storageClassName: azurefile-csi-premium

  